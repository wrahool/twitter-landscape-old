theme_bw()
plot5 <- ggplot(full_tbl, aes(mean_rating_attn_twtr)) +
geom_density() +
ggtitle("correct answers AND trump - sanders > 0") +
theme_bw()
mturk_only_plots <- plot_grid(plot1, plot2, plot3, plot4, plot5, ncol = 2)
# check correlations with barbera estimates
compare_tbl <- full_tbl %>%
select(handle, mean_rating_all, mean_rating_attn, barbera_ideology) %>%
mutate(scaled_mturk_ideology = scale_01(mean_rating_all),
scaled_mturk_ideology_attn = scale_01(mean_rating_attn),
scaled_barbera_ideology = scale_01(barbera_ideology)) %>%
select(scaled_mturk_ideology, scaled_mturk_ideology_attn, scaled_barbera_ideology)
cor.test(compare_tbl$scaled_mturk_ideology, compare_tbl$scaled_barbera_ideology, method = "pearson") %>%
tidy()
cor.test(compare_tbl$scaled_mturk_ideology_attn, compare_tbl$scaled_barbera_ideology, method = "pearson") %>%
tidy()
###
# compare mturk vs barbera ideology
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology) %>%
mutate(mturk_ideology_shifted = mean_rating_attn - 4) %>%
select(-mean_rating_attn) %>%
rename(barbera = barbera_ideology,
mturk = mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(ideology))
viz_tbl
viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology") +
theme_bw() +
theme(legend.position = "bottom")
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology") +
theme_bw() +
theme(legend.position = c(0.25, 0.75))
unweighted_distribution_plot
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology") +
theme_bw() +
theme(legend.position = c(0.25, 0.75),
axis.text=element_text(size=12),
axis.title=element_text(size=14))
unweighted_distribution_plot
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology") +
theme_bw() +
theme(legend.position = c(0.25, 0.75),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
unweighted_distribution_plot
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=12, height=6)
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology") +
theme_bw() +
theme(legend.position = c(0.15, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology",
fill = "ideology type") +
theme_bw() +
theme(legend.position = c(0.15, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
unweighted_distribution_plot
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology",
fill = "ideology type",
color = "ideology type") +
theme_bw() +
theme(legend.position = c(0.15, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
unweighted_distribution_plot
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
weighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
theme_bw() +
xlim(c(-4,4)) +
labs(x="weighted ideology",
fill = "ideology type",
color = "ideology type")+
theme(legend.position = c(0.15, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
weighted_distribution_plot
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology, freq_scaled) %>%
mutate(weighted_barbera_ideology = barbera_ideology * freq_scaled,
weighted_mturk_ideology_shifted = (mean_rating_attn - 4) * freq_scaled) %>%
select(-mean_rating_attn, -barbera_ideology, -freq_scaled) %>%
rename(barbera = weighted_barbera_ideology,
mturk = weighted_mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "weighted_ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(weighted_ideology))
weighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
theme_bw() +
xlim(c(-4,4)) +
labs(x="weighted ideology",
fill = "ideology type",
color = "ideology type")+
theme(legend.position = c(0.15, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
weighted_distribution_plot
ggsave(file="figures/fig2.svg", plot=weighted_distribution_plot, width=8, height=6)
ggsave(file="figures/fig3.svg", plot=weighted_distribution_plot, width=8, height=6)
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
qs <- quantile(full_tbl$freq, probs = seq(0, 1, by = 0.1))
all_decile_tbl = NULL
for(i in 1:10) {
decile_tbl <- full_tbl %>%
filter(freq >= qs[i] & freq <= qs[i+1]) %>%
mutate(decile = i)
all_decile_tbl <- all_decile_tbl %>% rbind(decile_tbl)
}
medians <- all_decile_tbl %>%
group_by(decile) %>%
summarize(barbera = median(barbera_ideology),
mturk = median(mean_rating_attn-4)) %>%
ungroup() %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "decile_median_ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
viz_tbl <- all_decile_tbl %>%
select(handle, decile, mean_rating_attn, barbera_ideology) %>%
mutate(mean_rating_attn = mean_rating_attn - 4) %>%
rename(mturk = mean_rating_attn,
barbera = barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies")) %>%
inner_join(medians, by = c("decile", "type"))
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, alpha = .4) +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw() +
theme(legend.position = "none")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
dec_wilcox_tbl <- NULL
decile_plots
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw() +
theme(legend.position = "none")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
decile_plots
ggsave(file="figures/fig4.svg", plot=decile_plots, width=8, height=6)
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed")
decile_plots
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw() +
theme(legend.position = "none")+
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
decile_plots
ggsave(file="figures/fig4.svg", plot=decile_plots, width=8, height=6)
elite_classes <- read_csv("data/elite_classification.csv")
classes <- elite_classes %>%
pull(sector1) %>%
unique()
classes <- classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_ideologies <- NULL
for(class in classes) {
message(class)
class_elites <- elite_classes %>%
filter(sector1 %in% class | sector2 %in% class | sector3 %in% class) %>%
pull(handle) %>% tolower()
class_elites_ideology <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology, freq_scaled) %>%
filter(handle %in% class_elites) %>%
mutate(genre = class,
mturk_ideology = mean_rating_attn - 4,
weighted_mturk_ideology = mturk_ideology * freq_scaled,
weighted_barbera_ideology = barbera_ideology * freq_scaled) %>%
select(-mean_rating_attn)
all_class_elites_ideologies <- all_class_elites_ideologies %>%
rbind(class_elites_ideology)
}
class_medians <- all_class_elites_ideologies %>%
group_by(genre) %>%
summarize(median_mturk_ideology_unweighted = median(mturk_ideology),
median_barbera_ideology_unweighted = median(barbera_ideology),
median_mturk_ideology_weighted = median(weighted_mturk_ideology),
median_barbera_ideology_weighted = median(weighted_barbera_ideology)) %>%
ungroup()
all_class_elites_ideologies <- all_class_elites_ideologies %>%
select(-freq_scaled)
unweighted_medians <- class_medians %>%
select(genre, median_barbera_ideology_unweighted, median_mturk_ideology_unweighted) %>%
rename(mturk = median_mturk_ideology_unweighted,
barbera = median_barbera_ideology_unweighted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "class_median_ideology")
viz_tbl <- all_class_elites_ideologies %>%
select(handle, genre, mturk_ideology, barbera_ideology) %>%
rename(mturk = mturk_ideology,
barbera = barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "ideology") %>%
inner_join(unweighted_medians, by = c("type", "genre")) %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
unweighted_genre_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = class_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4))+
facet_wrap(~genre, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="unweighted ideology")
unweighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, alpha = 0.4) +
labs(x = "ideology", y = "genre") +
# facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
unweighted_genre_ridgeplots
unweighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, alpha = 0.4) +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
unweighted_genre_ridgeplots
unweighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
unweighted_genre_ridgeplots
unweighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
unweighted_genre_ridgeplots
weighted_medians <- class_medians %>%
select(genre, median_barbera_ideology_weighted, median_mturk_ideology_weighted) %>%
rename(mturk = median_mturk_ideology_weighted,
barbera = median_barbera_ideology_weighted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "class_median_ideology")
viz_tbl <- all_class_elites_ideologies %>%
select(handle, genre, weighted_mturk_ideology, weighted_barbera_ideology) %>%
rename(mturk = weighted_mturk_ideology,
barbera = weighted_barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "weighted_ideology") %>%
inner_join(weighted_medians, by = c("type", "genre"))
weighted_genre_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = class_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4))+
facet_wrap(~genre, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="weighted ideology")
weighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, alpha = 0.4) +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
weighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
weighted_genre_ridgeplots
weighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
weighted_genre_ridgeplots
genre_ridgeplots <- plot_grid(plotlist = list(unweighted_genre_ridgeplots, weighted_genre_ridgeplots), labels = "AUTO")
genre_ridgeplots
genre_ridgeplots <- plot_grid(plotlist = list(unweighted_genre_ridgeplots, weighted_genre_ridgeplots),
labels = "AUTO", ncol = 1, align = "v")
genre_ridgeplots
weighted_medians <- class_medians %>%
select(genre, median_barbera_ideology_weighted, median_mturk_ideology_weighted) %>%
rename(mturk = median_mturk_ideology_weighted,
barbera = median_barbera_ideology_weighted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "class_median_ideology")
viz_tbl <- all_class_elites_ideologies %>%
select(handle, genre, weighted_mturk_ideology, weighted_barbera_ideology) %>%
rename(mturk = weighted_mturk_ideology,
barbera = weighted_barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "weighted_ideology") %>%
inner_join(weighted_medians, by = c("type", "genre")) %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
weighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
weighted_genre_ridgeplots
genre_ridgeplots <- plot_grid(plotlist = list(unweighted_genre_ridgeplots, weighted_genre_ridgeplots),
labels = "AUTO", ncol = 1, align = "v")
genre_ridgeplots
ggsave(file="figures/fig5.svg", plot=decile_plots, width=8, height=12)
ggsave(file="figures/fig5.svg", plot=genre_ridgeplots, width=8, height=12)
setwd("C:/Users/Subhayan/Work/twitter-landscape/")
library(tidyverse)
library(ggrepel)
library(ggridges)
library(cowplot)
library(svglite)
elite_df <- read_csv("data/mturk_ideologies.csv")
elites <- elite_df$handle
elites <- c(elites, "realDonaldTrump", "BernieSanders")
load("data/master_edge_list.Rdata")
following_tbl <- following_df %>%
as_tibble() %>%
rename("user" = 1, "following" = 2) %>%
mutate(user = as.character(user), following = as.character(following))
elite_following_tbl <- following_tbl %>%
filter(tolower(following) %in% tolower(elites))
#top 20 elites
top_20 <- elite_following_tbl %>%
pull(following) %>%
table() %>%
data.frame() %>%
as_tibble() %>%
arrange(-Freq) %>%
head(20)
elite_following_tbl <- elite_following_tbl %>%
filter(user != "Tip")
elite_genres <- read_csv("data/elite_classification.csv")
genres <- c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
elite_activity <- read_csv("data/elites_activity.csv")
relevance_df <- read_csv("../echo-chamber-exp/important_results/rnr/oct 9/all_relevance_ideologies.csv")
relevance_df <- relevance_df %>%
select(userhandle, relevance_kw, relevance_delib) %>%
mutate(handle = tolower(userhandle)) %>%
select(-userhandle)
relevance_df %>%
filter(handle %in% tolower(top_20$.))
all_genre_info <- NULL
for(genre in genres) {
genre_elites <- elite_genres %>%
filter(sector1 == genre | sector2 == genre | sector3 == genre) %>%
pull(handle) %>%
unique()
n_elites <- length(genre_elites)
unique_followers_genre <- elite_following_tbl %>%
filter(following %in% genre_elites) %>%
pull(user) %>%
unique() %>%
length()
genre_activity <- elite_activity %>%
filter(handle %in% tolower(genre_elites)) %>%
pull(numberoftweets) %>%
sum()
genre_median_relevance <- relevance_df %>%
filter(handle %in% tolower(genre_elites)) %>%
pull(relevance_kw) %>%
median()
all_genre_info <- all_genre_info %>%
rbind(c(genre = genre,
elite_count = n_elites,
unique_followers = unique_followers_genre,
number_of_tweets = genre_activity,
median_relevance = genre_median_relevance)) %>%
as_tibble()
}
all_genre_info <- all_genre_info %>%
mutate(elite_count = as.numeric(elite_count),
unique_followers = as.numeric(unique_followers),
number_of_tweets = as.numeric(number_of_tweets)) %>%
mutate(unique_followers_per_elite = unique_followers / elite_count,
number_of_tweets_per_elite = number_of_tweets / elite_count)
fig1a_plot <- all_genre_info %>%
ggplot(aes(x=unique_followers, y=number_of_tweets)) +
geom_point(shape = 21, aes(size=elite_count, fill=as.numeric(median_relevance))) +
scale_fill_gradient(low="white", high="red") +
scale_size_continuous(range = c(4, 16.4)) +
geom_text_repel(aes(label = genre),
size = 4.6) +
labs(x="# unique followers", y="# tweets", size="# elites", fill = "political relevance") +
theme_bw() +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=9),
legend.position = c(0.25, 0.75),
legend.box = "horizontal",
legend.text = element_text(size=8),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
all_class_elites_relevance <- NULL
for(class in genres) {
message(class)
class_elites <- elite_genres %>%
filter(sector1 %in% class | sector2 %in% class | sector3 %in% class) %>%
pull(handle) %>% tolower()
all_class_elites_relevance <- relevance_df %>%
filter(handle %in% class_elites) %>%
mutate(class = class) %>%
rbind(all_class_elites_relevance)
}
fig1b_plot <- ggplot(all_class_elites_relevance) +
stat_density_ridges(aes(x = relevance_kw, y = class), fill = "skyblue", quantile_lines = TRUE, quantiles = 2) +
labs(x="political relevance score", y="genre") +
theme_bw() +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=9))
fig1 <- plot_grid(plotlist = list(fig1a_plot, fig1b_plot), ncol = 2,
align = "h", axis = "b", rel_widths = c(1.5, 1),
labels = "AUTO")
ggsave(file="figures/fig1.svg", plot=fig1, width=12, height=6)
