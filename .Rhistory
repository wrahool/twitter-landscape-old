elite_master_tbl %>% inner_join(median2) -> elite_master_tbl
median.tbl <- elite_master_tbl %>%
group_by(community) %>%
mutate(median.id = median(ideology))
p1 <- ggplot(elite_master_tbl, aes(ideology)) +
geom_density(fill = "snow3", alpha = 0.6, colour="black") +
facet_wrap(~community, nrow = 5, scales = "free") +
xlim(-3, 3) +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
theme_bw() +
theme(legend.position = "none")
p2 = ggplot(elite_master_tbl, aes(corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, colour="black") +
facet_wrap(~community, nrow = 5, scales = "free") +
xlim(-3, 3) +
geom_vline(aes(xintercept=grp.median.w), color = "red") +
geom_vline(xintercept=0, linetype = "dashed") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
theme_bw() +
theme(legend.position = "none")
# figure 7
grid.arrange(p1, p2, nrow = 1)
#wt anlaysis
library(ggplot2)
library(plyr)
library(dplyr)
library(gridExtra)
library(moments)
setwd("C:/Users/Subhayan/Documents/Work/twitter-landscape/")
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_followers_count = read.csv("data/elite_followers_count.csv")
load("data/walktrap_results.Rdata")
comm_membership <- data.frame(cbind(wt$names, wt$membership))
names(comm_membership) <- c("username", "community")
comm_membership$username <- tolower(as.character(comm_membership$username))
library(tidyverse)
elite_master_tbl <- elite_freq_df %>%
inner_join(comm_membership) %>%
inner_join(elite_followers_count)
median1 <- ddply(elite_master_tbl, "community", summarise, grp.median=median(ideology, na.rm = T))
median2 <- ddply(elite_master_tbl, "community", summarise, grp.median.w=median(corrected_ideology, na.rm = T))
elite_master_tbl %>% inner_join(median1) -> elite_master_tbl
elite_master_tbl %>% inner_join(median2) -> elite_master_tbl
median.tbl <- elite_master_tbl %>%
group_by(community) %>%
mutate(median.id = median(ideology))
p1 <- ggplot(elite_master_tbl, aes(ideology)) +
geom_density(fill = "snow3", alpha = 0.6, colour="snow3") +
facet_wrap(~community, nrow = 5, scales = "free") +
xlim(-3, 3) +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
theme_bw() +
theme(legend.position = "none")
p2 = ggplot(elite_master_tbl, aes(corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, colour="snow3") +
facet_wrap(~community, nrow = 5, scales = "free") +
xlim(-3, 3) +
geom_vline(aes(xintercept=grp.median.w), color = "red") +
geom_vline(xintercept=0, linetype = "dashed") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) +
theme_bw() +
theme(legend.position = "none")
# figure 7
grid.arrange(p1, p2, nrow = 1)
# figure 7
grid.arrange(p1, p2, nrow = 1)
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_classes = read.csv("data/elite_classification.csv", as.is = T)
classes = unique(elite_classes$sector1)
classes = classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_ideologies = NULL
for(class in classes) {
print(class)
class_elites = elite_classes[elite_classes$sector1 %in% class |
elite_classes$sector2 %in% class |
elite_classes$sector3 %in% class,]$handle
class_elites = tolower(class_elites)
class_elites_ideology = elite_freq_df[elite_freq_df$username %in% class_elites,]
d_ce = density(class_elites_ideology$corrected_ideology)
plot(d_ce, xlab = "idelogy", main = paste0(class, " accounts (N=" , nrow(class_elites_ideology),") "))
class_elites_ideology$class = class
all_class_elites_ideologies = rbind(all_class_elites_ideologies, class_elites_ideology)
}
all_class_elites_ideologies$class_2 = gsub(pattern = " ", "", all_class_elites_ideologies$class)
all_class_elites_ideologies
head()
head(all_class_elites_ideologies)
library(tidyverse)
all_class_elites_ideologies %>%
group_by(class) %>%
summarize(class_media = median(corrected_ideology))
medians <- ddply(all_class_elites_ideologies, "class", summarise, grp.median=median(ideology, na.rm = T))
medians
all_class_elites_ideologies %>% inner_join(medians) -> all_class_elites_ideologies
# weighted elite distribution within genres
ggplot(all_class_elites_ideologies, aes(x=corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, color = "snow3") +
facet_wrap(~class, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme_bw()
# weighted elite distribution within genres
ggplot(all_class_elites_ideologies, aes(x=corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, color = "snow3") +
facet_wrap(~class, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme_bw() +
theme(legend.position = "none")
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_classes = read.csv("data/elite_classification.csv", as.is = T)
classes = unique(elite_classes$sector1)
classes = classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_ideologies = NULL
for(class in classes) {
print(class)
class_elites = elite_classes[elite_classes$sector1 %in% class |
elite_classes$sector2 %in% class |
elite_classes$sector3 %in% class,]$handle
class_elites = tolower(class_elites)
class_elites_ideology = elite_freq_df[elite_freq_df$username %in% class_elites,]
d_ce = density(class_elites_ideology$corrected_ideology)
plot(d_ce, xlab = "idelogy", main = paste0(class, " accounts (N=" , nrow(class_elites_ideology),") "))
class_elites_ideology$class = class
all_class_elites_ideologies = rbind(all_class_elites_ideologies, class_elites_ideology)
}
all_class_elites_ideologies$class_2 = gsub(pattern = " ", "", all_class_elites_ideologies$class)
library(tidyverse)
medians <- ddply(all_class_elites_ideologies, "class", summarise, grp.median=median(corrected_ideology, na.rm = T))
all_class_elites_ideologies %>% inner_join(medians) -> all_class_elites_ideologies
# weighted elite distribution within genres
ggplot(all_class_elites_ideologies, aes(x=corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, color = "snow3") +
facet_wrap(~class, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme_bw() +
theme(legend.position = "none")
# weighting and distribution within deciles.
library(reshape)
library(ggplot2)
library(plyr)
setwd("C:/Users/Subhayan/Documents/Work/twitter-landscape//")
#without NAs
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
elite_df = elite_df[!is.na(elite_df$ideology),]
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_freq_viz = elite_freq_df[,c(1, 2, 5)]
elite_freq_viz_long = melt(elite_freq_viz, id.vars= "username")
mu <- ddply(elite_freq_viz_long, "variable", summarise, grp.mean=mean(value, na.rm = T))
p3_withoutNA = ggplot(elite_freq_viz_long, aes(x=value, fill=variable)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
linetype="dashed") +
scale_colour_manual(values = c("#E7B800", "#FC4E07")) +
scale_fill_manual(values = c("#E7B800", "#FC4E07")) +
theme_bw() +
theme(legend.position = "none")
#elites without neutrals: weighted vs unweighted
#with NAs
library(reshape)
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_freq_viz = elite_freq_df[,c(1, 2, 5)]
elite_freq_viz_long = melt(elite_freq_viz, id.vars= "username")
mu <- ddply(elite_freq_viz_long, "variable", summarise, grp.mean=mean(value, na.rm = T))
p4_withNA = ggplot(elite_freq_viz_long, aes(x=value, fill=variable)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
linetype="dashed") +
scale_colour_manual(values = c("#E7B800", "#FC4E07")) +
scale_fill_manual(values = c("#E7B800", "#FC4E07")) +
theme_bw() +
theme(legend.position = "none")
#elites with neutrals: weighted vs unweighted
library(gridExtra)
#figure 4
grid.arrange(p3_withoutNA, p4_withNA, nrow = 1)
#distribution within deciles
qs = quantile(elite_freq_df$numberoftweets, probs = seq(0, 1, by = 0.1))
par(mfrow=c(5,2))
all_decile_df = NULL
grays = gray.colors(10, start = 0.1, end = 0.9, gamma = 2.2, alpha = NULL)
for(i in 1:10) {
decile_df = elite_freq_df[elite_freq_df$numberoftweets >= qs[i] &
elite_freq_df$numberoftweets <= qs[i+1],]
d_de = density(decile_df$ideology)
#plot(d_de, xlab = "ideology", paste0(main = "ideological distribution of (N=" , nrow(decile_df),") elites in dcile ", i))
decile_df$decile = i
all_decile_df = rbind(all_decile_df, decile_df)
}
#elite ideology with neutrals, distribution within deciles
head(all_decile_df)
medians <- ddply(all_decile_df, "class", summarise, grp.median=median(ideology, na.rm = T))
str(all_decile_df)
ddply(all_decile_df, "class", summarise, grp.median=median(ideology, na.rm = T))
# weighting and distribution within deciles.
library(reshape)
library(ggplot2)
library(plyr)
setwd("C:/Users/Subhayan/Documents/Work/twitter-landscape//")
#without NAs
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
elite_df = elite_df[!is.na(elite_df$ideology),]
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_freq_viz = elite_freq_df[,c(1, 2, 5)]
elite_freq_viz_long = melt(elite_freq_viz, id.vars= "username")
mu <- ddply(elite_freq_viz_long, "variable", summarise, grp.mean=mean(value, na.rm = T))
p3_withoutNA = ggplot(elite_freq_viz_long, aes(x=value, fill=variable)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
linetype="dashed") +
scale_colour_manual(values = c("#E7B800", "#FC4E07")) +
scale_fill_manual(values = c("#E7B800", "#FC4E07")) +
theme_bw() +
theme(legend.position = "none")
#elites without neutrals: weighted vs unweighted
#with NAs
library(reshape)
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_freq_viz = elite_freq_df[,c(1, 2, 5)]
elite_freq_viz_long = melt(elite_freq_viz, id.vars= "username")
mu <- ddply(elite_freq_viz_long, "variable", summarise, grp.mean=mean(value, na.rm = T))
p4_withNA = ggplot(elite_freq_viz_long, aes(x=value, fill=variable)) +
geom_density(alpha=0.4) +
geom_vline(data=mu, aes(xintercept=grp.mean, color=variable),
linetype="dashed") +
scale_colour_manual(values = c("#E7B800", "#FC4E07")) +
scale_fill_manual(values = c("#E7B800", "#FC4E07")) +
theme_bw() +
theme(legend.position = "none")
#elites with neutrals: weighted vs unweighted
library(gridExtra)
#figure 4
grid.arrange(p3_withoutNA, p4_withNA, nrow = 1)
#distribution within deciles
qs = quantile(elite_freq_df$numberoftweets, probs = seq(0, 1, by = 0.1))
par(mfrow=c(5,2))
all_decile_df = NULL
grays = gray.colors(10, start = 0.1, end = 0.9, gamma = 2.2, alpha = NULL)
for(i in 1:10) {
decile_df = elite_freq_df[elite_freq_df$numberoftweets >= qs[i] &
elite_freq_df$numberoftweets <= qs[i+1],]
d_de = density(decile_df$ideology)
#plot(d_de, xlab = "ideology", paste0(main = "ideological distribution of (N=" , nrow(decile_df),") elites in dcile ", i))
decile_df$decile = i
all_decile_df = rbind(all_decile_df, decile_df)
}
all_decile_df
head(all_decile_df)
medians <- ddply(all_decile_df, "decile", summarise, grp.median=median(ideology, na.rm = T))
medians
all_decile_df %>% inner_join(medians)
all_decile_df <- all_decile_df %>% inner_join(medians)
#figure 5
ggplot(all_decile_df, aes(x=ideology)) +
geom_density(fill="snow3", alpha = 0.6, color = "snow3") +
facet_wrap(all_decile_df$decile, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
scale_fill_gradient(low="white", high="black") +
theme_bw() +
theme(legend.position = "none")
head(all_decile_df)
#figure 5
ggplot(all_decile_df, aes(x=ideology)) +
geom_density(fill="snow3", alpha = 0.6, color = "snow3") +
facet_wrap(~decile, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
scale_fill_gradient(low="white", high="black") +
theme_bw() +
theme(legend.position = "none")
#elites
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
#those with -Inf and +Inf ideologies are assigned very low and very high values instead.
#+/-3 is chosen because all other elites have absolute ideologies less than 3.
elite_df[is.na(elite_df$ideology),]$ideology = 0
elite_df[elite_df$ideology == -Inf,]$ideology = -3
elite_df[elite_df$ideology == Inf,]$ideology = 3
names(elite_df)[2] = "ideology"
elites = elite_df$username
elite_freq = read.csv("data/elites_activity.csv", as.is = T)
names(elite_freq)[1] = "username"
elite_freq$numberoftweets_scaled = (elite_freq$numberoftweets - min(elite_freq$numberoftweets))/(max(elite_freq$numberoftweets) - min(elite_freq$numberoftweets))
elite_df$username = tolower(elite_df$username)
elite_freq_df = merge(elite_df, elite_freq)
elite_freq_df$corrected_ideology = elite_freq_df$ideology * elite_freq_df$numberoftweets_scaled
elite_classes = read.csv("data/elite_classification.csv", as.is = T)
classes = unique(elite_classes$sector1)
classes = classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_ideologies = NULL
for(class in classes) {
print(class)
class_elites = elite_classes[elite_classes$sector1 %in% class |
elite_classes$sector2 %in% class |
elite_classes$sector3 %in% class,]$handle
class_elites = tolower(class_elites)
class_elites_ideology = elite_freq_df[elite_freq_df$username %in% class_elites,]
d_ce = density(class_elites_ideology$corrected_ideology)
plot(d_ce, xlab = "idelogy", main = paste0(class, " accounts (N=" , nrow(class_elites_ideology),") "))
class_elites_ideology$class = class
all_class_elites_ideologies = rbind(all_class_elites_ideologies, class_elites_ideology)
}
all_class_elites_ideologies$class_2 = gsub(pattern = " ", "", all_class_elites_ideologies$class)
library(tidyverse)
medians <- ddply(all_class_elites_ideologies, "class", summarise, grp.median=median(corrected_ideology, na.rm = T))
all_class_elites_ideologies %>% inner_join(medians) -> all_class_elites_ideologies
# weighted elite distribution within genres
ggplot(all_class_elites_ideologies, aes(x=corrected_ideology)) +
geom_density(fill = "snow3", alpha = 0.6, color = "snow3") +
facet_wrap(~class, nrow = 5, scales = "free") +
geom_vline(aes(xintercept=grp.median, colour = "red")) +
geom_vline(xintercept=0, linetype = "dashed") +
theme_bw() +
theme(legend.position = "none")
df = read.csv("../echo-chamber-exp/landscape_paper/master_edge_list.csv")
following_df = df
rm(df)
save(following_df, file = "data/master_edge_list.Rdata")
head(following_df)
load("data/master_edge_list.Rdata")
head(following_df)
setwd("C:/Users/Subhayan/Documents/Work/twitter-landscape/")
library(tidyverse)
library(ggrepel)
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
elites = elite_df$username
following_df = load("data/master_edge_list.Rdata")
names(following_df) = c("user", "following")
elite_following_df = following_df[tolower(following_df$following) %in% tolower(elites),]
following_df
setwd("C:/Users/Subhayan/Documents/Work/twitter-landscape/")
library(tidyverse)
library(ggrepel)
elite_df = read.csv("data/weak_elite_ideologies.csv", as.is = T)
elites = elite_df$username
load("data/master_edge_list.Rdata")
names(following_df) = c("user", "following")
elite_following_df = following_df[tolower(following_df$following) %in% tolower(elites),]
#top 20 elites
df <- data.frame(table(following_df$following))
head(df[order(-df$Freq),],20)
elite_following_df = elite_following_df[elite_following_df$user != "Tip",]
elite_following_df$user = as.character(elite_following_df$user)
elite_following_df$following = as.character(elite_following_df$following)
elite_classes = read.csv("data/elite_classification.csv", as.is = T)
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
elite_activity <- read_csv("data/elites_activity.csv")
all_class_info <- NULL
for(class in classes) {
class_elites <- elite_classes %>%
filter(sector1 == class | sector2 == class | sector3 == class) %>%
pull(handle)
n_elites <- length(class_elites)
unique_followers_class <- elite_following_df %>%
filter(following %in% class_elites) %>%
pull(user) %>%
unique() %>%
length()
class_activity <- elite_activity %>%
filter(handle %in% tolower(class_elites)) %>%
pull(numberoftweets) %>%
sum()
class_row <- c(class, n_elites, unique_followers_class, class_activity)
all_class_info <- rbind(class_row, all_class_info)
}
all_class_info <- data.frame(all_class_info, row.names = NULL)
names(all_class_info) <- c("genre", "elite_count", "unique_followers", "number_of_tweets")
all_class_info$genre = as.character(all_class_info$genre)
all_class_info$elite_count = as.numeric(as.character(all_class_info$elite_count))
all_class_info$unique_followers = as.numeric(as.character(all_class_info$unique_followers))
all_class_info$number_of_tweets = as.numeric(as.character(all_class_info$number_of_tweets))
all_class_info$unique_followers_per_elite = all_class_info$unique_followers / all_class_info$elite_count
all_class_info$number_of_tweets_per_elite = all_class_info$number_of_tweets / all_class_info$elite_count
all_class_info_bkup <- all_class_info
all_class_info_bkup$number_of_tweets_scaled <- all_class_info_bkup$number_of_tweets/10000
all_class_info_bkup
all_class_info_long <- all_class_info_bkup %>%
select(-c(unique_followers_per_elite, number_of_tweets_per_elite)) %>%
gather(key, value, c(elite_count, unique_followers, number_of_tweets_scaled))
ggplot(all_class_info, aes(x=unique_followers, y=number_of_tweets)) +
geom_point(shape = 21, color = "black", fill = "salmon", aes(size=all_class_info$elite_count)) +
scale_size_continuous(range = c(4, 16.4)) +
geom_text_repel(aes(label = all_class_info$genre),
size = 4) +
theme_bw() +
theme(legend.position="none")
ggplot(all_class_info, aes(x=unique_followers, y=number_of_tweets)) +
geom_point(shape = 21, color = "black", fill = "salmon", aes(size=all_class_info$elite_count)) +
scale_size_continuous(range = c(4, 16.4)) +
theme_bw() +
theme(legend.position="none")
