setwd("C:/Users/Subhayan/Work/twitter-landscape/")
library(tidyverse)
library(corrr)
library(cowplot)
library(broom)
library(stargazer)
library(knitr)
library(ggridges)
exclude_barbera_NAs <- FALSE
MTurk_NA_threshold <- 100 # set to 100 for all elites
# function to scale a vector to between [0,1]
scale_01 <- function(x){(x-min(x))/(max(x)-min(x))}
mturk_tbl <- read_csv("data/mturk_ideologies.csv")
barbera_tbl <- read_csv("data/weak_elite_ideologies.csv")
elite_freq_tbl <- read_csv("data/elites_activity.csv")
if(exclude_barbera_NAs) {
barbera_tbl <- barbera_tbl %>%
mutate(handle = tolower(username)) %>%
filter(!is.na(ideology)) %>%
rename(recoded_ideology = ideology) %>%
mutate(recoded_ideology = ifelse(recoded_ideology == -Inf, -3, recoded_ideology)) %>%
mutate(recoded_ideology = ifelse(recoded_ideology == Inf, 3, recoded_ideology)) %>%
rename(barbera_ideology = recoded_ideology) %>%
select(handle, barbera_ideology)
} else {
barbera_tbl <- barbera_tbl %>%
mutate(handle = tolower(username)) %>%
mutate(recoded_ideology = ifelse(is.na(ideology), 0, ideology)) %>%
mutate(recoded_ideology = ifelse(recoded_ideology == -Inf, -3, recoded_ideology)) %>%
mutate(recoded_ideology = ifelse(recoded_ideology == Inf, 3, recoded_ideology)) %>%
rename(barbera_ideology = recoded_ideology) %>%
select(handle, barbera_ideology)
}
mturk_tbl <- mturk_tbl %>%
filter(NA_percent_attn <= MTurk_NA_threshold)
elite_freq_tbl <- elite_freq_tbl %>%
mutate(handle = tolower(handle)) %>%
rename(freq = numberoftweets) %>%
mutate(freq_scaled = scale_01(freq))
full_tbl <- mturk_tbl %>%
inner_join(barbera_tbl) %>%
inner_join(elite_freq_tbl)
# different kinds of plots with only mturk
plot1 <- ggplot(full_tbl, aes(mean_rating_all)) +
geom_density() +
ggtitle("all annotations") +
theme_bw()
plot2 <- ggplot(full_tbl, aes(mean_rating_attn)) +
geom_density() +
ggtitle("annotations with trump minus sanders > 0") +
theme_bw()
plot3 <- ggplot(full_tbl, aes(mean_rating_twtr)) +
geom_density() +
ggtitle("annotations with twitter account == 1") +
theme_bw()
plot4 <- ggplot(full_tbl, aes(mean_rating_pk)) +
geom_density() +
ggtitle("annotations all knowledge questions correctly answered") +
theme_bw()
plot5 <- ggplot(full_tbl, aes(mean_rating_attn_twtr)) +
geom_density() +
ggtitle("correct answers AND trump - sanders > 0") +
theme_bw()
mturk_only_plots <- plot_grid(plot1, plot2, plot3, plot4, plot5, ncol = 2)
# check correlations with barbera estimates
compare_tbl <- full_tbl %>%
select(handle, mean_rating_all, mean_rating_attn, barbera_ideology) %>%
mutate(scaled_mturk_ideology = scale_01(mean_rating_all),
scaled_mturk_ideology_attn = scale_01(mean_rating_attn),
scaled_barbera_ideology = scale_01(barbera_ideology)) %>%
select(scaled_mturk_ideology, scaled_mturk_ideology_attn, scaled_barbera_ideology)
cor.test(compare_tbl$scaled_mturk_ideology, compare_tbl$scaled_barbera_ideology, method = "pearson") %>%
tidy()
cor.test(compare_tbl$scaled_mturk_ideology_attn, compare_tbl$scaled_barbera_ideology, method = "pearson") %>%
tidy()
###
## for all visualizations from here on, we only use mean_rating_attn,
# ie. we remove all those who did not pass the attention check
# compare mturk vs barbera ideology
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology) %>%
mutate(mturk_ideology_shifted = mean_rating_attn - 4) %>%
select(-mean_rating_attn) %>%
rename(barbera = barbera_ideology,
mturk = mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(ideology))
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology",
fill = "ideology type",
color = "ideology type") +
theme_bw() +
theme(legend.position = c(0.18, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size = 14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
# paired wilcox test (are mturk ideologies significantly lesser than barbera ideologies)
wilcoxon_comparison_tbl <- viz_tbl %>%
pivot_wider(values_from = ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`,
wilcoxon_comparison_tbl$`ideal points`, paired = TRUE,
alternative = "less") %>% tidy()
NA_density <- full_tbl %>%
select(NA_percent_all) %>%
mutate(NA_percent_all = round(NA_percent_all)) %>%
rename(NA_percent = NA_percent_all) %>%
ggplot(aes(NA_percent)) +
geom_histogram(aes(y=..density..), colour="black", fill="white", binwidth = 5) +
geom_density(alpha= 0.2, fill="#FF6666") +
scale_x_continuous(breaks=seq(0, 100, by = 5)) +
theme_bw() +
labs(x = "Percent of MTurkers responded with 'don't know/can't say",
y = "Frequency of opinion leaders")
# weighted
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology, freq_scaled) %>%
mutate(weighted_barbera_ideology = barbera_ideology * freq_scaled,
weighted_mturk_ideology_shifted = (mean_rating_attn - 4) * freq_scaled) %>%
select(-mean_rating_attn, -barbera_ideology, -freq_scaled) %>%
rename(barbera = weighted_barbera_ideology,
mturk = weighted_mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "weighted_ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(weighted_ideology))
weighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
theme_bw() +
xlim(c(-4,4)) +
labs(x="weighted ideology",
fill = "ideology type",
color = "ideology type")+
theme(legend.position = c(0.18, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size = 14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/fig3.svg", plot=weighted_distribution_plot, width=8, height=6)
# paired wilcox test (are mturk ideologies significantly lesser than barbera ideologies)
wilcoxon_comparison_tbl <- viz_tbl %>%
pivot_wider(values_from = weighted_ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`, wilcoxon_comparison_tbl$`ideal points`, paired = TRUE, alternative = "less") %>% tidy()
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology) %>%
mutate(mturk_ideology_shifted = mean_rating_attn - 4) %>%
select(-mean_rating_attn) %>%
rename(barbera = barbera_ideology,
mturk = mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(ideology))
unweighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
xlim(c(-4,4)) +
labs(x="unweighted ideology",
fill = "ideology type",
color = "ideology type") +
theme_bw() +
theme(legend.position = c(0.18, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size = 14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/fig2.svg", plot=unweighted_distribution_plot, width=8, height=6)
# paired wilcox test (are mturk ideologies significantly lesser than barbera ideologies)
wilcoxon_comparison_tbl <- viz_tbl %>%
pivot_wider(values_from = ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`,
wilcoxon_comparison_tbl$`ideal points`, paired = TRUE,
alternative = "less") %>% tidy()
?wilcox.test
ilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`,
wilcoxon_comparison_tbl$`ideal points`, paired = TRUE,
alternative = "less")
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`,
wilcoxon_comparison_tbl$`ideal points`, paired = TRUE,
alternative = "less")
NA_density <- full_tbl %>%
select(NA_percent_all) %>%
mutate(NA_percent_all = round(NA_percent_all)) %>%
rename(NA_percent = NA_percent_all) %>%
ggplot(aes(NA_percent)) +
geom_histogram(aes(y=..density..), colour="black", fill="white", binwidth = 5) +
geom_density(alpha= 0.2, fill="#FF6666") +
scale_x_continuous(breaks=seq(0, 100, by = 5)) +
theme_bw() +
labs(x = "Percent of MTurkers responded with 'don't know/can't say",
y = "Frequency of opinion leaders")
# weighted
viz_tbl <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology, freq_scaled) %>%
mutate(weighted_barbera_ideology = barbera_ideology * freq_scaled,
weighted_mturk_ideology_shifted = (mean_rating_attn - 4) * freq_scaled) %>%
select(-mean_rating_attn, -barbera_ideology, -freq_scaled) %>%
rename(barbera = weighted_barbera_ideology,
mturk = weighted_mturk_ideology_shifted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "weighted_ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(weighted_ideology))
weighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
theme_bw() +
xlim(c(-4,4)) +
labs(x="weighted ideology",
fill = "ideology type",
color = "ideology type")+
theme(legend.position = c(0.18, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size = 14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/fig3.svg", plot=weighted_distribution_plot, width=8, height=6)
# paired wilcox test (are mturk ideologies significantly lesser than barbera ideologies)
wilcoxon_comparison_tbl <- viz_tbl %>%
pivot_wider(values_from = weighted_ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`, wilcoxon_comparison_tbl$`ideal points`, paired = TRUE, alternative = "less") %>% tidy()
setwd("C:/Users/Subhayan/Work/twitter-landscape/")
library(tidyverse)
library(corrr)
library(cowplot)
library(broom)
exclude_barbera_NAs <- TRUE
# function to scale a vector to between [0,1]
scale_01 <- function(x){(x-min(x))/(max(x)-min(x))}
mturk_tbl <- read_csv("data/mturk_ideologies.csv")
barbera_tbl <- read_csv("data/weak_elite_ideologies.csv")
elite_freq_tbl <- read_csv("data/elites_activity.csv")
barbera_tbl <- barbera_tbl %>%
rename(handle = username) %>%
mutate(handle = tolower(handle))
barbera_NAs <- barbera_tbl %>%
mutate(barbera_NA = is.na(ideology)) %>%
select(handle, barbera_NA)
threshold_accuracy_tbl <- NULL
for(threshold in 0:100) {
message(threshold)
threshold_mturk_NAs <- mturk_tbl %>%
mutate(mturk_NA = (NA_percent_attn >= threshold)) %>%
select(handle, mturk_NA)
threshold_confusion_tbl <- barbera_NAs %>%
inner_join(threshold_mturk_NAs) %>%
mutate(tallyNAs = paste(barbera_NA, mturk_NA, sep = "_")) %>%
group_by(tallyNAs) %>%
tally()
TP <- threshold_confusion_tbl %>%
filter(tallyNAs == "TRUE_TRUE") %>%
pull(n)
TP <- ifelse(length(TP) == 0, 0, TP)
FP <- threshold_confusion_tbl %>%
filter(tallyNAs == "FALSE_TRUE") %>%
pull(n)
FP <- ifelse(length(FP) == 0, 0, FP)
TN <- threshold_confusion_tbl %>%
filter(tallyNAs == "FALSE_FALSE") %>%
pull(n)
TN <- ifelse(length(TN) == 0, 0, TN)
FN <- threshold_confusion_tbl %>%
filter(tallyNAs == "TRUE_FALSE") %>%
pull(n)
FN <- ifelse(length(FN) == 0, 0, FN)
pre <- TP/(TP+FP)
rec <- TP/(TP+FN)
f1 <- 2*pre*rec/(pre + rec)
threshold_accuracy_tbl <- threshold_accuracy_tbl %>%
rbind(tibble(
thr = threshold,
precision = pre,
recall = rec,
f1_score = f1))
}
threshold_accuracy_tbl <- threshold_accuracy_tbl %>%
pivot_longer(cols = 2:4, names_to = "measure", values_to = "value")
pre_rec_f1_plot <- ggplot(threshold_accuracy_tbl) +
geom_line(aes(x=thr, y=value, color=measure)) +
theme_bw() +
labs(x = "classifying an elite as NA if at least x% mturkers said NA",
y = "score comparing the set of NAs according to mturk with set of barbera NAs") +
theme(legend.position = "bottom")
elite_freq_tbl <- elite_freq_tbl %>%
mutate(handle = tolower(handle)) %>%
rename(freq = numberoftweets) %>%
mutate(freq_scaled = scale_01(freq))
full_tbl <- mturk_tbl %>%
inner_join(barbera_tbl) %>%
inner_join(elite_freq_tbl)
NAs <- full_tbl %>%
select(NA_percent_attn) %>%
mutate(NA_percent_attn = round(NA_percent_attn)) %>%
rename(NA_percent = NA_percent_attn)
NA_density <- full_tbl %>%
select(NA_percent_attn) %>%
mutate(NA_percent_attn = round(NA_percent_attn)) %>%
rename(NA_percent = NA_percent_attn) %>%
ggplot(aes(NA_percent)) +
geom_histogram(aes(y=..density..), colour="black", fill="white", binwidth = 5) +
geom_density(alpha= 0.2, fill="#FF6666") +
scale_x_continuous(breaks=seq(0, 100, by = 5)) +
theme_bw() +
labs(x = "Percent of MTurkers responded with 'don't know/can't say'",
y = "Frequency of opinion leaders")
barbera_mturk_NAs <- barbera_NAs %>%
inner_join(mturk_tbl) %>%
select(handle, barbera_NA, NA_percent_attn) %>%
mutate(NA_percent_attn = round(NA_percent_attn))
barbera_NA_medians <- barbera_mturk_NAs %>%
group_by(barbera_NA) %>%
summarize(median_mturk_NA = median(NA_percent_attn))
wilcox.test(NA_percent_attn ~ barbera_NA, data = barbera_mturk_NAs, alternative = "less") %>% tidy()
?wilcox.test
